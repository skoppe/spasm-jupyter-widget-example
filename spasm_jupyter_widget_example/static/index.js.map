{"version":3,"sources":["webpack:///webpack/bootstrap 301237440cab7fb8a433","webpack:///./lib/index.js","webpack:///./lib/example.js","webpack:///external \"@jupyter-widgets/base\"","webpack:///./package.json"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,KAAK;QACL;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;QAEA;QACA;;;;;;;AC7DA;AACA,iBAAiB,mBAAO,CAAC,CAAc;AACvC,4BAA4B,mBAAO,CAAC,CAAiB;;;;;;;ACFrD,cAAc,mBAAO,CAAC,CAAuB;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;;;;;;;AC9CA,+C;;;;;;ACAA,kBAAkB,wKAAwK,gFAAgF,+HAA+H,kKAAkK,oBAAoB,qCAAqC,iBAAiB,qCAAqC,eAAe,6B","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 301237440cab7fb8a433","// Export widget models and views, and the npm package version number.\nmodule.exports = require('./example.js');\nmodule.exports['version'] = require('../package.json').version;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/index.js\n// module id = 0\n// module chunks = 0","var widgets = require('@jupyter-widgets/base');\n\n// Custom Model. Custom widgets models must at least provide default values\n// for model attributes, including\n//\n//  - `_view_name`\n//  - `_view_module`\n//  - `_view_module_version`\n//\n//  - `_model_name`\n//  - `_model_module`\n//  - `_model_module_version`\n//\n//  when different from the base class.\n\n// When serialiazing the entire widget state for embedding, only values that\n// differ from the defaults will be specified.\nvar HelloModel = widgets.DOMWidgetModel.extend({\n    defaults: _.extend(widgets.DOMWidgetModel.prototype.defaults(), {\n        _model_name : 'HelloModel',\n        _view_name : 'HelloView',\n        _model_module : 'spasm_jupyter_widget_example',\n        _view_module : 'spasm_jupyter_widget_example',\n        _model_module_version : '0.1.0',\n        _view_module_version : '0.1.0',\n        value : 'Hello World!'\n    })\n});\n\n\n// Custom View. Renders the widget model.\nvar HelloView = widgets.DOMWidgetView.extend({\n    render: function() {\n        this.value_changed();\n        this.model.on('change:value', this.value_changed, this);\n    },\n\n    value_changed: function() {\n        this.el.textContent = this.model.get('value');\n    }\n});\n\n\nmodule.exports = {\n    HelloModel : HelloModel,\n    HelloView : HelloView\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/example.js\n// module id = 1\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@jupyter-widgets/base\"\n// module id = 2\n// module chunks = 0","module.exports = {\"name\":\"spasm_jupyter_widget_example\",\"version\":\"0.1.0\",\"description\":\"A Custom Jupyter Widget Library\",\"author\":\"Sebastiaan Koppe\",\"main\":\"lib/index.js\",\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/skoppe/spasm_jupyter_widget_example.git\"},\"keywords\":[\"jupyter\",\"widgets\",\"ipython\",\"ipywidgets\",\"jupyterlab-extension\"],\"files\":[\"lib/**/*.js\",\"dist/*.js\"],\"scripts\":{\"clean\":\"rimraf dist/\",\"prepublish\":\"webpack\",\"build\":\"webpack\",\"watch\":\"webpack --watch --mode=development\",\"test\":\"echo \\\"Error: no test specified\\\" && exit 1\"},\"devDependencies\":{\"webpack\":\"^3.5.5\",\"rimraf\":\"^2.6.1\"},\"dependencies\":{\"@jupyter-widgets/base\":\"^1.1 || ^2\"},\"jupyterlab\":{\"extension\":\"lib/labplugin\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./package.json\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}